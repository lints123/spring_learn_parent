<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!--    <bean id="userDao1" class="com.learn.dao.impl.UserDaoImpl"/>-->
<!--    <bean id="userDao2" class="com.learn.dao.impl.UserDaoImpl"/>-->
<!--    <bean id="userDao3" class="com.learn.dao.impl.UserDaoImpl"/>-->

    <!--加载BeanFactoryPostProcess-->
    <bean class="com.learn.processer.MyBeanFactoryPostProcessor"/>
    <bean class="com.learn.processer.MyBeanDefinitionRegistryPostProcessor"/>

    <!--加载BeanPostProcessor-->
    <bean class="com.learn.processer.MyBeanPostProcessor"/>

    <!--将Bean注入到spring IOC容器中处理
    1. 构造方法创建Bean对象（无参构造或者有参构造）
    2. Bean对象内部，多参数配置
    -->
<!--    <bean id="userService" class="com.learn.service.impl.UserServiceImpl">-->
<!--        &lt;!&ndash;注释，则默认无参构造&ndash;&gt;-->
<!--        &lt;!&ndash;<constructor-arg name="userName" value="测试"/>-->
<!--        <constructor-arg name="userDao" ref="userDao1"/>&ndash;&gt;-->
<!--        <property name="stringList">-->
<!--            <list>-->
<!--                <value>aaa</value>-->
<!--                <value>bbb</value>-->
<!--                <value>ccc</value>-->
<!--            </list>-->
<!--        </property>-->

<!--        <property name="strSet">-->
<!--            <set>-->
<!--                <value>xxx</value>-->
<!--                <value>yyy</value>-->
<!--            </set>-->
<!--        </property>-->

<!--        <property name="userDaoList">-->
<!--            <list>-->
<!--                <ref bean="userDao1"/>-->
<!--                <ref bean="userDao2"/>-->
<!--                <ref bean="userDao3"/>-->
<!--            </list>-->
<!--        </property>-->

<!--        <property name="userDaoMap">-->
<!--            <map>-->
<!--                <entry key="userKey1" value-ref="userDao1"/>-->
<!--                <entry key="userKey2" value-ref="userDao2"/>-->
<!--            </map>-->
<!--        </property>-->

<!--        <property name="properties">-->
<!--            <props>-->
<!--                <prop key="p1">aaaa</prop>-->
<!--                <prop key="p2">bbbb</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

<!-- >>>> 自动装配开始 <<<< -->
<!--主要通过autowire来进行装配，如果使用byName，那么方法名必须一致，如果使用byType，那么<bean id = "userDao"，其中userDao可以任意定义-->
    <bean id="userService" class="com.learn.service.impl.UserServiceImpl" autowire="byName"/>
    <bean id="userDao" class="com.learn.dao.impl.UserDaoImpl"/>
<!-- >>>> 自动装配结束 <<<< -->

<!-- >>>> 通过BeanFactory创建Bean对象开始 <<<< -->
    <!--静态工厂方法创建对象，这里定义的是静态的方法  getUserServiceToStatic-->
<!--    <bean id="myBeanFactory" class="com.learn.factorys.MyBeanFactory" factory-method="getUserServiceToStatic">-->
<!--        <constructor-arg name="userName" value="zhangsan"/>-->
<!--    </bean>-->

    <!--实例工厂方法创建对象，这里定义的是非静态方法，Bean的创建交给BeanFactory-->
<!--    <bean id="myBeanFactory1" class="com.learn.factorys.MyBeanFactory"/>

    <bean id="userServiceFactory" factory-bean="myBeanFactory1" factory-method="getUserService">
        <constructor-arg name="userName" value="zhangsan"/>
    </bean>-->
<!-- >>>> 通过BeanFactory创建Bean对象结束 <<<<-->

<!-- >>>> 通过FactoryBean创建对象开始 <<<< -->
    <!--<bean id="userService" class="com.learn.factorys.MyFactoryBean"/>-->
<!-- >>>> 通过FactoryBean创建对象结束 <<<<-->

</beans>